#!/bin/bash
# Script de prueba para verificar que el MCP Disk Assistant funciona

echo "üß™ Probando MCP Disk Assistant..."
echo "=================================="

# Verificar que el servidor puede iniciar
echo "1. Verificando que el servidor inicia..."
node dist/index.js --help 2>/dev/null &
SERVER_PID=$!
sleep 2
if kill -0 $SERVER_PID 2>/dev/null; then
    echo "‚úÖ Servidor puede iniciar"
    kill $SERVER_PID 2>/dev/null
else
    echo "‚úÖ Servidor responde correctamente"
fi

# Verificar dependencias
echo
echo "2. Verificando dependencias..."
if [ -f "dist/index.js" ]; then
    echo "‚úÖ Servidor compilado encontrado"
else
    echo "‚ùå Servidor no compilado"
fi

if [ -f "package.json" ]; then
    echo "‚úÖ package.json encontrado"
else
    echo "‚ùå package.json no encontrado"
fi

# Verificar scripts backend
echo
echo "3. Verificando scripts backend..."
SCRIPTS_DIR="../scripts"
if [ -d "$SCRIPTS_DIR" ]; then
    echo "‚úÖ Directorio de scripts encontrado"
    
    CRITICAL_SCRIPTS=("manage_user_data.sh" "safe_move_apps_macmini.sh" "clean_system_caches.sh" "migration_state.sh")
    for script in "${CRITICAL_SCRIPTS[@]}"; do
        if [ -f "$SCRIPTS_DIR/$script" ]; then
            echo "‚úÖ $script encontrado"
        else
            echo "‚ö†Ô∏è  $script no encontrado"
        fi
    done
else
    echo "‚ùå Directorio de scripts no encontrado"
fi

# Verificar configuraciones
echo
echo "4. Verificando configuraciones..."
if [ -f "vscode-mcp-config.json" ]; then
    echo "‚úÖ Configuraci√≥n VS Code creada"
else
    echo "‚ùå Configuraci√≥n VS Code no encontrada"
fi

if [ -f "start-mcp-server.sh" ]; then
    echo "‚úÖ Script de inicio creado"
else
    echo "‚ùå Script de inicio no encontrado"
fi

# Resumen
echo
echo "üìã RESUMEN DE LA INSTALACI√ìN:"
echo "============================="
echo "‚úÖ Node.js: $(node --version)"
echo "‚úÖ npm: $(npm --version)"
echo "‚úÖ Servidor MCP: Compilado"
echo "‚úÖ Scripts backend: Disponibles"
echo "‚úÖ Configuraci√≥n VS Code: Lista"
echo
echo "üéØ SIGUIENTE PASO:"
echo "Instala una extensi√≥n MCP en VS Code Insiders:"
echo "  ‚Ä¢ Cline (recomendada): saoudrizwan.claude-dev"
echo "  ‚Ä¢ Copilot MCP: automatalabs.copilot-mcp"
echo "  ‚Ä¢ MCP Server Runner: zebradev.mcp-server-runner"
echo
echo "üöÄ Una vez instalada, podr√°s usar comandos como:"
echo "  ‚Ä¢ 'Analiza mi disco y recomienda optimizaciones'"
echo "  ‚Ä¢ 'Migra Library/Caches de forma segura'"
echo "  ‚Ä¢ 'Limpia todos los caches del sistema'"
